trigger:
- master

variables:
  CI: 'true'

jobs:
  - job: DotNetDotfiles
    pool:
      vmImage: 'windows-latest'
    steps:
      - powershell: |
          $downloadLocation = [System.IO.Path]::GetTempPath() + "dotfiles"
          Invoke-Expression ((new-object net.webclient).downloadstring("https://raw.githubusercontent.com/DiXN/dotfiles/master/src/scripts/download-repo.ps1"))
          dotnet tool install -g dotnet-script
          Invoke-Expression ("${env:userprofile}\.dotnet\tools\dotnet-script.exe -c release $downloadLocation\scripts\dotnet\main.csx")
        displayName: Compile `main.csx` for dotfiles `dotnet-script`.
  - job: DotNetSync
    pool:
      vmImage: 'windows-latest'
    steps:
      - powershell: |
          $downloadLocation = [System.IO.Path]::GetTempPath() + "dotfiles"
          Invoke-Expression ((new-object net.webclient).downloadstring("https://raw.githubusercontent.com/DiXN/dotfiles/master/src/scripts/download-repo.ps1"))
          dotnet tool install -g dotnet-script
          Invoke-Expression ("${env:userprofile}\.dotnet\tools\dotnet-script.exe -c release $downloadLocation\scripts\dotnet\sync-files.csx -- --ci")
        displayName: Compile `sync-files.csx` `dotnet-script`.
  - job: DotfilesDesktop
    dependsOn: DotNetDotfiles
    condition: succeeded()
    timeoutInMinutes: 200
    pool:
      vmImage: 'windows-latest'
    steps:
      - powershell: .\src\scripts\init.ps1 'desktop'
        displayName: Run `init.ps1` on "Desktop"
        env:
          CI: 'true'
  - job: DotfilesNotebook
    dependsOn: DotNetDotfiles
    condition: succeeded()
    timeoutInMinutes: 200
    pool:
      vmImage: 'windows-latest'
    steps:
      - powershell: .\src\scripts\init.ps1 'notebook'
        displayName: Run `init.ps1` on "Notebook"
        env:
          CI: 'true'
